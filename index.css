.container {
    display: grid;
    /* Базовый шаблон, чтобы задать колонку:  */
    /* Задавать размеры колонн можно всеми способами, но самая удобная - это фракции.  */
    grid-template-columns: 150px 150px;
    /* чтобы сделать много колонок, существует такой параметр:  */
    /* grid-template-columns: repeat(10, 1fr); */
    /* Чтобы задать ширину сетки.  */
    /* grid-template-rows: 50px 100px 150px 200px; */

    /* Можно задать ширину между колонками:  */
    grid-column-gap: 10px;
    /* Между строками:  */
    grid-row-gap: 10px;
    /* Можно написать всё это проще, чтобы отступы применялись и к колонкам, и к строкам. */
    grid-gap: 10px;
    /* КОлонки, где не заданы ширина, автоматически получают 100px. */
    /* grid-auto-rows: 100px; */
    /* Свойство можно сделать еще интереснее, 
    если у нас есть текст или любой другой элемент, не помещающийся в колонку: */
    grid-auto-rows: minmax(50px, auto);
    /* Чтобы выравнивать элементы:  */
    justify-content: center; /*по оси x*/
    align-content: end; /*по оси y*/
    /* Чтобы управлять элементами, где нет контента, поможет свойство: 
    При этом все колонки, в которых есть какие-то элеиенты не будут затронены. */
    /* align-items: start;
    justify-items: start; */
}

.item_3 {
    /* ЧТобы упрвылять олджним конкретным элементом:  */
    align-self: center;
    justify-self: end;
    /* Можно еще конкретнее позиционировать элемент: число, где должен находиться элемент в описанном св-ве. */
    /* grid-column-start: 1;
    grid-column-end: 3;
    grid-row-start: 2;
    grid-row-end: 5; */
    /* Сокращение:  */
    grid-column: 1/3; /*то есть, элемет занимает ровно три строки.*/
    grid-row: 2/5;
}

.item_7 {
    /* Сделать так, чтобы 7 колонка занимала место 2:  */
    grid-row-start: 1;
    grid-column-start: 2;
}

.item {
    padding: 10px;
    border: 1px solid black;
}